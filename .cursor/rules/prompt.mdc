---
description:
globs:
alwaysApply: true
---

**开发文档：大学生就业帮扶系统**

**1. 功能概述**

本项目旨在构建一个连接高校学生、招聘企业及校内辅导员的在线平台。核心目标是为大学生提供便捷的求职渠道、真实的就业信息和经验分享空间，协助企业高效地发布招聘需求和筛选人才，并赋予辅导员进行信息管理、流程审核和就业指导的能力，最终提升大学生就业服务的效率和质量。

**2. 详细功能描述**

**2.1 用户认证与档案管理**

- **功能概述：** 提供学生、企业、辅导员三类用户的注册、登录及个人/企业信息维护功能。
- **UI 展示：**
  - **注册页面：** 提供不同角色（学生/企业/辅导员）的注册入口。学生注册需填写学号（验证对接数据库）、学校、专业、姓名、联系方式、密码等。企业注册需填写企业名称、统一社会信用代码、联系人、联系方式、密码等。辅导员注册需提供工号（验证对接数据库）、姓名、联系方式、密码等。
  - **登录页面：** 提供用户名（或学号/工号）和密码输入框，包含“忘记密码”链接。
  - **修改密码页面：** 提供输入旧密码和两次新密码的输入框，带密码强度提示（不确定具体规则）。
  - **学生档案页面：** 分模块展示和编辑学生信息，包括基础信息、教育经历、实习/项目经历（结构化表单）、自我介绍、技能标签、求职意向。提供上传附件简历的入口（限 PDF/DOCX）。显示行为分（只读）。
  - **企业档案页面：** 分模块展示和编辑企业信息，包括企业名称、行业、规模、地址、公司简介、HR 联系方式、上传企业 Logo、上传营业执照复印件（限 PDF/JPG/PNG，有大小限制）。显示认证状态和认证有效期。
  - **辅导员信息页面：** 展示辅导员基础信息。
- **交互流程：**
  - **注册：** 用户选择角色 -> 填写信息（需校验格式和完整性） -> 提交 -> 注册成功并跳转登录页。
  - **登录：** 用户输入账号密码 -> 提交 -> 后台验证身份 -> 成功后跳转至对应角色首页；失败则提示错误信息（如账号或密码错误）。
  - **忘记密码：** 用户提供账号/注册密保及答案 -> 系统提取数据库保存的密保及密保答案 -> 用户输入密保并进行对比，成功后设置新密码 -> 完成密码重置。
  - **档案编辑：** 用户进入档案页面 -> 编辑对应信息 -> 点击保存 -> 后台校验数据并更新 -> 提示保存成功。企业信息修改可能触发辅导员复审（不确定哪些字段修改需要复审）。
  - **上传简历/资质：** 用户点击上传按钮 -> 选择文件 -> 系统上传并显示上传状态 -> 上传成功后显示文件信息（如文件名、大小）。企业营业执照上传后状态为“待认证”。
- **逻辑功能：**

  - 处理用户注册请求，校验数据，创建用户记录，存储密码的哈希值（不确定哈希算法）。
  - 处理用户登录请求，验证用户名密码，生成并管理用户会话状态（不确定具体会话管理机制）。
  - 处理修改密码请求，验证旧密码，更新密码哈希值。
  - 存储和更新学生/企业详细档案信息，处理文件上传（存储路径、文件命名）（不确定文件存储位置）。
  - 管理企业认证状态和有效期，触发到期提醒（不确定具体提醒机制）。
  - 管理学生行为分，记录相关行为事件（不确定具体行为分增减逻辑）。

- **数据模型：**
  - `User` (id, username, password_hash, role, status, created_at, updated_at)
  - `StudentProfile` (id, user_id, name, contact, school, major, grade, self_introduction, job_preferences, behavior_score)
  - `StudentStructuredResume` (id, student_profile_id, section_type, content) - 用于存储结构化简历信息
  - `StudentResumeFile` (id, student_profile_id, file_name, file_path, uploaded_at) - 用于存储附件简历信息
  - `CompanyProfile` (id, user_id, name, unified_social_credit_code, industry, size, address, description, hr_contact, logo_path, certification_status, certification_expiry_date)
  - `CompanyLicenseFile` (id, company_profile_id, file_name, file_path, uploaded_at)
  - `CounselorProfile` (id, user_id, employee_id, name, contact)
  - `SkillTag` (id, name) - 学生技能标签
  - `WelfareTag` (id, name, category) - 福利标签
  - `JobTag` (id, name) - 岗位标签

**2.2 就业招聘**

- **功能概述：** 支持企业发布岗位，学生浏览、搜索、筛选和投递岗位，以及辅导员审核岗位和企业资质。
- **UI 展示：**
  - **学生端岗位列表：** 展示岗位卡片列表，包含岗位名称、企业名称、薪资、地点等核心信息。顶部或侧边提供筛选/搜索条件区域（输入框、下拉菜单、多选框、滑块）。支持分页加载。
  - **学生端岗位详情页：** 展示完整的岗位描述、要求、工作时间、福利、招聘人数等，以及企业信息（含认证标识、评分）。提供“投递简历”、“联系企业 HR”按钮。
  - **学生端投递记录页：** 列出学生已投递的岗位，显示投递时间、岗位名称、企业名称、当前状态（如已投递、企业已查看、已邀请面试、已拒绝等）。
  - **企业端岗位管理页：** 列出企业已发布的所有岗位，显示状态（待审核、招聘中、已驳回、已结束）。提供“发布新岗位”、“编辑”、“删除”、“刷新”按钮。
  - **企业端发布/编辑岗位页：** 提供结构化表单填写岗位信息（名称、描述、要求、薪资范围、地点、学历、经验、类型、人数、时间、福利标签（预设+自定义）、岗位标签、招聘有效期、联系人/方式展示选项）。自定义福利标签需提示待审核。
  - **企业端收到的申请页：** 按岗位或按学生列出收到的投递，显示学生姓名、学校、投递时间、简历（链接或预览入口）、当前状态。提供筛选、标记状态（如已读、待联系、已面试、不合适等）、批量下载简历、收藏/黑名单学生的按钮。
- **交互流程：**
  - **学生搜索/筛选：** 学生在岗位列表页输入关键词或选择筛选条件 -> 点击搜索/筛选按钮 -> 页面刷新显示符合条件的岗位列表。
  - **学生查看详情：** 学生点击岗位列表中的某个岗位 -> 跳转至岗位详情页。
  - **学生投递简历：** 学生在岗位详情页点击“投递简历” -> 系统记录投递行为，更新投递状态 -> 提示投递成功。如果学生未完善简历，需引导先完善。
  - **企业发布岗位：** 企业在岗位管理页点击“发布新岗位” -> 跳转至发布页填写信息 -> 点击提交 -> 岗位状态变为“待审核”。
  - **企业管理岗位：** 企业在岗位管理页对岗位进行编辑、删除、刷新等操作 -> 提交修改后可能需重新审核。
  - **企业处理申请：** 企业在收到的申请页查看学生投递 -> 点击学生记录可查看简历（下载附件简历） -> 标记处理状态 -> 可通过站内信通知学生处理结果。
  - **企业批量下载简历：** 企业在申请页选择多个学生 -> 点击批量下载 -> 系统打包选定学生的附件简历生成 ZIP 文件供下载（有数量限制）。对于只填写结构化简历的学生，批量下载时不包含其信息（不确定是否需要生成标准文档）。
- **逻辑功能：**

  - 存储和检索岗位信息，实现多条件组合筛选和搜索（不确定具体搜索过滤实现技术）。
  - 处理学生投递请求，创建投递记录，更新投递状态。
  - 存储企业发布的岗位信息（状态管理：草稿、待审核、招聘中、已驳回、已结束）。
  - 处理岗位编辑、删除、刷新的请求，删除需考虑关联数据处理（如投递记录）。
  - 记录学生投递和企业处理申请的状态。
  - 处理批量下载简历请求，打包文件并提供下载（不确定文件打包库）。
  - 实现企业收藏/黑名单学生功能，影响后续互动（如是否能再次投递、是否显示给企业）。
  - 辅导员审核企业资质和岗位，更新认证状态和岗位状态，记录审核意见和历史。
  - 校验自定义福利标签是否符合规范（不确定具体审核逻辑）。

- **数据模型：**
  - `JobPosting` (已在用户档案部分定义)
  - `Application` (id, student_id, job_id, applied_at, status, company_notes)
  - `StudentFavorite` (id, company_id, student_id) - 企业收藏学生
  - `StudentBlacklist` (id, company_id, student_id) - 企业拉黑学生
  - `JobAuditLog` (id, job_id, counselor_id, action, reason, timestamp)
  - `CompanyCertAuditLog` (id, company_id, counselor_id, action, reason, timestamp)

**2.3 企业评分与评价**

- **功能概述：** 提供学生对企业进行匿名评分和评价，供其他学生参考，并支持辅导员管理评价内容。
- **UI 展示：**
  - **学生端评分入口：** 在投递记录或企业相关页面（如企业详情）中，在满足条件下显示“评价企业”按钮。
  - **学生端评分/评价页面：** 提供多维度评分项（如岗位真实性、面试体验、公司环境、福利兑现），使用星级或滑动条。提供文本评价输入框（有字数限制）。提示评价规范。提供“匿名评价”选项（默认勾选）。
  - **企业详情页（学生端）：** 显示企业整体平均分（需达到最低评价数量门槛）及其他学生的评价列表（按时间或推荐排序，不显示学生姓名）。
  - **企业端收到的评价页：** 列出收到的所有评价（不显示学生姓名），显示评分、评价内容。
- **交互流程：**
  - **学生提交评价：** 学生点击“评价企业” -> 跳转评分页面 -> 填写评分和评价 -> 点击提交 -> 后台记录评价，更新企业评分（可能需经过审核，不确定是否实时显示）。
  - **学生查看评价：** 学生在企业详情页浏览其他学生的评价。
  - **辅导员处理举报：** 辅导员在工作台收到举报通知 -> 查看被举报评价内容 -> 决定删除或保留 -> 如果删除，记录原因并可能更新学生行为分。
- **逻辑功能：**

  - 存储学生提交的评分和评价内容，记录提交时间和关联的投递/岗位信息。
  - 计算企业整体平均分（基于所有有效评价），处理最低评价数量门槛逻辑。
  - 实现匿名评价功能，确保企业端无法直接关联到学生身份。
  - 处理评价举报，供辅导员审核。
  - 删除不当评价，并根据规则更新学生行为分。

- **数据模型：**
  - `Rating` (id, student_id, company_id, job_id, score, dimension1_score, ..., comment, submitted_at, status - Active/Deleted, is_anonymous)
  - `Report` (id, reporting_user_id, reported_item_type, reported_item_id, reason, reported_at, status - Pending/Resolved, counselor_id, resolution) - `reported_item_type` 可为 'rating'

**2.4 类沟通功能**

- **功能概述：** 提供学生、企业、辅导员之间的实时文字沟通能力，包括学生与企业间的招聘沟通、学生与辅导员间的指导交流、以及学生间的群组经验分享。
- **UI 展示：**
  - **聊天列表页：** 展示用户参与的会话列表，按最近活跃排序。每个会话显示对方名称/群组名称、最近一条消息摘要、未读消息数。区分不同类型的会话（学生-企业、学生-辅导员、学生群组）。
  - **聊天会话页：** 显示特定会话的完整消息记录。底部有消息输入框，支持发送文字、图片、附件（有图标入口）。顶部显示会话名称，可能有会话设置或信息入口。
  - **学生-企业会话：** 会话标题显示企业名和关联岗位名。
  - **学生-辅导员会话：** 会话标题显示辅导员姓名。
  - **学生群组会话：** 会话标题显示群组名称。
  - **文件/图片选择器：** 用户点击发送附件图标后弹出的系统文件选择器。
- **交互流程：**
  - **发起学生-企业会话：** 学生在岗位详情页点击“联系 HR”或企业在申请列表点击“联系学生”触发创建或进入会话。
  - **发起学生-辅导员会话：** 学生在辅导员相关页面或通过特定入口点击“联系辅导员”。辅导员在学生档案或相关管理页面点击“联系学生”。
  - **发起学生群组会话：** (不确定群组创建/加入的具体流程，例如是否自由创建、邀请加入或由辅导员创建)
  - **发送消息：** 用户在输入框输入内容，点击发送按钮 -> 消息显示在当前会话中 -> 系统发送消息至对方，更新会话状态。
  - **发送附件：** 用户点击附件图标 -> 选择文件 -> 文件上传（显示进度）-> 上传成功后作为消息发送。
  - **查看历史：** 用户滚动聊天界面可加载更早的消息记录。
  - **会话归档：** 岗位结束等条件满足时，会话状态变为只读，用户无法发送消息。
  - **举报消息：** 用户可选择特定消息进行举报（不确定具体交互）。
- **逻辑功能：**

  - 建立和管理不同类型的聊天会话（S-E, S-C, S-S Group），处理会话的创建、查找和状态更新。
  - 处理消息的发送和接收，实时推送消息至在线用户（不确定实时通信技术，如 WebSocket）。
  - 存储消息内容和附件信息，记录发送时间、发送者、消息类型。
  - 处理附件上传，存储文件并管理文件路径（不确定文件存储位置、大小格式校验）。
  - 实现未读消息计数和标记功能。
  - 管理会话生命周期，处理归档状态和只读权限。
  - 实现定期清理满足条件的归档会话及相关附件（不确定清理的触发频率和精确逻辑）。
  - 支持用户举报不当消息，记录举报信息。
  - 辅导员可查看被举报消息，并处理（删除、记录违规等）。
  - 管理学生群组（创建、成员管理等）（不确定具体实现细节）。

- **数据模型：**
  - `ChatSession` (id, type, related_job_id, group_id, participant1_id, participant2_id, created_at, last_active_at, status, is_readonly) - type: SE/SC/SS; related_job_id: S-E 会话关联的岗位 ID; group_id: S-S 会话关联的群组 ID; participant1/2_id: S-E/S-C 会话参与者 ID
  - `ChatMessage` (id, session_id, sender_id, content, content_type, file_path, sent_at)
  - `ChatGroup` (id, name, created_by, created_at) - 学生群组
  - `ChatGroupMember` (id, group_id, student_id, joined_at)
  - `Report` (已在评分模块定义) - `reported_item_type` 可为 'message' 或 'chat_session'

**2.5 辅导员工作台**

- **功能概述：** 为辅导员提供一个集中的界面，管理各类审核任务、处理用户举报、查看系统预警等。
- **UI 展示：**
  - **工作台首页：** 概览待处理任务数量，按类型（企业认证、岗位审核、举报处理等）分类显示，提供各分类的快捷入口。可能有优先级标识或分类切换标签。
  - **任务列表页（按类型）：** 列出特定类型的待处理任务，显示关键信息（如企业名称、岗位名称、举报人、举报对象），按优先级或时间排序。提供查看详情和快捷处理按钮。
  - **任务详情页：** 展示待处理任务的详细信息（如企业资质、岗位内容、被举报的评价/消息）。提供审核操作按钮（通过、驳回、删除等）和理由填写区域（预设选项+文本框）。
  - **历史操作记录页：** 列出当前辅导员已完成的所有审核和处理操作，显示时间、操作类型、对象、结果。
- **交互流程：**
  - 辅导员登录后进入工作台。
  - 辅导员查看各类型任务数量，点击进入具体任务列表。
  - 辅导员在列表页或详情页查看任务详情。
  - 辅导员根据详情进行审核或处理操作（如点击“通过”、“驳回”、“删除”），填写理由（如适用）。
  - 提交操作 -> 后台处理任务状态更新，并通知相关用户。
  - 辅导员可查看自己的历史操作记录。
- **逻辑功能：**

  - 汇总来自不同模块（认证、招聘、评分、沟通）的待处理任务。
  - 实现任务的分类、计数、优先级排序（不确定优先级具体计算规则）。
  - 处理辅导员的审核/处理操作，更新任务状态和相关业务数据（如企业认证状态、岗位状态、评价状态）。
  - 记录辅导员的所有关键操作，供历史查询。
  - 根据辅导员操作触发系统通知。

- **数据模型：**
  - `CounselorTask` (id, type, target_item_type, target_item_id, created_at, status, counselor_id, notes, priority) - target_item_type: Company/Job/Rating/ChatMessage/ChatSession
  - `CounselorOperationLog` (id, counselor_id, operation_type, target_item_type, target_item_id, result, timestamp)

**3. 技术栈**

- 后端：Spring Boot 3.x、Axios、MySQL。
- 前端：vue3、ElementPlus、vite。

---
